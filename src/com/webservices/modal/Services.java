package com.webservices.modal;

// Generated Feb 15, 2016 12:31:18 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Services generated by hbm2java
 */
@Entity
@Table(name = "services", catalog = "mysql_service", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Services implements java.io.Serializable {

	private Long serviceId;
	private String companyLocation;
	private String companyName;
	private Date createDate;
	private String name;
	private String personInCharge;
	private String personInChargeDivision;
	private String personInChargeEmail;
	private String personInChargePhonenumber;
	private String uuid;
	private Set<MyService> myServices = new HashSet<MyService>(0);
	private Set<DailyService> dailyService = new HashSet<DailyService>(0);
	private Set<ServiceCategory> serviceCategories = new HashSet<ServiceCategory>(
			0);
	private Set<UserServiceMapping> userServiceMappings = new HashSet<UserServiceMapping>(
			0);
	private Set<ServiceImageMapping> serviceImageMappings = new HashSet<ServiceImageMapping>(
			0);

	public Services() {
	}

	public Services(Date createDate, String name, String uuid) {
		this.createDate = createDate;
		this.name = name;
		this.uuid = uuid;
	}

	public Services(String companyLocation, String companyName,
			Date createDate, String name, String personInCharge,
			String personInChargeDivision, String personInChargeEmail,
			String personInChargePhonenumber, String uuid,
			Set<MyService> myServices,Set<DailyService> dailyServices, Set<ServiceCategory> serviceCategories,
			Set<UserServiceMapping> userServiceMappings,
			Set<ServiceImageMapping> serviceImageMappings) {
		this.companyLocation = companyLocation;
		this.companyName = companyName;
		this.createDate = createDate;
		this.name = name;
		this.personInCharge = personInCharge;
		this.personInChargeDivision = personInChargeDivision;
		this.personInChargeEmail = personInChargeEmail;
		this.personInChargePhonenumber = personInChargePhonenumber;
		this.uuid = uuid;
		this.myServices = myServices;
		this.dailyService = dailyServices;
		this.serviceCategories = serviceCategories;
		this.userServiceMappings = userServiceMappings;
		this.serviceImageMappings = serviceImageMappings;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "serviceID", unique = true, nullable = false)
	public Long getServiceId() {
		return this.serviceId;
	}

	public void setServiceId(Long serviceId) {
		this.serviceId = serviceId;
	}

	@Column(name = "companyLocation")
	public String getCompanyLocation() {
		return this.companyLocation;
	}

	public void setCompanyLocation(String companyLocation) {
		this.companyLocation = companyLocation;
	}

	@Column(name = "companyName")
	public String getCompanyName() {
		return this.companyName;
	}

	public void setCompanyName(String companyName) {
		this.companyName = companyName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createDate", nullable = false, length = 0)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "personInCharge")
	public String getPersonInCharge() {
		return this.personInCharge;
	}

	public void setPersonInCharge(String personInCharge) {
		this.personInCharge = personInCharge;
	}

	@Column(name = "personInChargeDivision")
	public String getPersonInChargeDivision() {
		return this.personInChargeDivision;
	}

	public void setPersonInChargeDivision(String personInChargeDivision) {
		this.personInChargeDivision = personInChargeDivision;
	}

	@Column(name = "personInChargeEmail")
	public String getPersonInChargeEmail() {
		return this.personInChargeEmail;
	}

	public void setPersonInChargeEmail(String personInChargeEmail) {
		this.personInChargeEmail = personInChargeEmail;
	}

	@Column(name = "personInChargePhonenumber")
	public String getPersonInChargePhonenumber() {
		return this.personInChargePhonenumber;
	}

	public void setPersonInChargePhonenumber(String personInChargePhonenumber) {
		this.personInChargePhonenumber = personInChargePhonenumber;
	}

	@Column(name = "uuid", nullable = false)
	public String getUuid() {
		return this.uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "services")
	public Set<MyService> getMyServices() {
		return this.myServices;
	}

	public void setMyServices(Set<MyService> myServices) {
		this.myServices = myServices;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "services")
	public Set<DailyService> getDailyService() {
		return this.dailyService;
	}

	public void setDailyService(Set<DailyService> dailyService) {
		this.dailyService = dailyService;
	}


	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "service_category_mapping", catalog = "mysql_service", joinColumns = { @JoinColumn(name = "serviceId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "categoryId", nullable = false, updatable = false) })
	public Set<ServiceCategory> getServiceCategories() {
		return this.serviceCategories;
	}

	public void setServiceCategories(Set<ServiceCategory> serviceCategories) {
		this.serviceCategories = serviceCategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "services")
	public Set<UserServiceMapping> getUserServiceMappings() {
		return this.userServiceMappings;
	}

	public void setUserServiceMappings(
			Set<UserServiceMapping> userServiceMappings) {
		this.userServiceMappings = userServiceMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "services")
	public Set<ServiceImageMapping> getServiceImageMappings() {
		return this.serviceImageMappings;
	}

	public void setServiceImageMappings(
			Set<ServiceImageMapping> serviceImageMappings) {
		this.serviceImageMappings = serviceImageMappings;
	}

}
